{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","newTask","nanoid","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"oNAuCeA,MArCf,SAAcC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAanB,OACE,0BAAMC,SAPR,SAAsBC,GACpBA,EAAEC,iBACFN,EAAMO,QAAQL,GACdC,EAAQ,MAMN,wBAAIK,UAAU,iBACZ,2BAAOC,QAAQ,iBAAiBD,UAAU,aAA1C,2BAIF,2BACEE,KAAK,OACLC,GAAG,iBACHH,UAAU,kBACVN,KAAK,OACLU,aAAa,MACbC,MAAOX,EACPY,SAzBN,SAAsBT,GACpBF,EAAQE,EAAEU,OAAOF,UA0Bf,4BAAQH,KAAK,SAASF,UAAU,4BAAhC,SCdSQ,MAff,SAAsBhB,GACpB,OACE,4BACEU,KAAK,SACLF,UAAU,iBACVS,eAAcjB,EAAMkB,UACpBC,QAAS,kBAAMnB,EAAMoB,UAAUpB,EAAME,QAErC,0BAAMM,UAAU,mBAAhB,SACA,8BAAOR,EAAME,MACb,0BAAMM,UAAU,mBAAhB,YCXS,SAASa,EAAKrB,GAAQ,IAAD,EACFC,oBAAS,GADP,mBAC3BqB,EAD2B,KAChBC,EADgB,OAEJtB,mBAAS,IAFL,mBAE3BuB,EAF2B,KAElBC,EAFkB,KAelC,IAAMC,EACJ,0BAAMlB,UAAU,cAAcJ,SARhC,SAAsBC,GACpBA,EAAEC,iBACFN,EAAM2B,SAAS3B,EAAMW,GAAIa,GACzBC,EAAW,IACXF,GAAW,KAKT,yBAAKf,UAAU,cACb,2BAAOA,UAAU,aAAaC,QAAST,EAAMW,IAA7C,gBACgBX,EAAME,MAEpB,2BACES,GAAIX,EAAMW,GACVH,UAAU,YACVE,KAAK,OACLG,MAAOW,EACPV,SAtBV,SAAsBT,GACpBoB,EAAWpB,EAAEU,OAAOF,WAwBlB,yBAAKL,UAAU,aACb,4BACEE,KAAK,SACLF,UAAU,kBACVW,QAAS,kBAAMI,GAAW,KAH5B,SAKI,0BAAMf,UAAU,mBAAhB,YAA4CR,EAAME,OAEtD,4BAAQQ,KAAK,SAASF,UAAU,8BAAhC,OAEE,0BAAMA,UAAU,mBAAhB,gBAAgDR,EAAME,SAKxD0B,EACJ,yBAAKpB,UAAU,eACb,yBAAKA,UAAU,QACX,2BACEG,GAAIX,EAAMW,GACVD,KAAK,WACLmB,eAAgB7B,EAAM8B,UACtBhB,SAAU,kBAAMd,EAAM+B,oBAAoB/B,EAAMW,OAElD,2BAAOH,UAAU,aAAaC,QAAST,EAAMW,IAC1CX,EAAME,OAGX,yBAAKM,UAAU,aACf,4BAAQE,KAAK,SAASF,UAAU,MAAMW,QAAS,kBAAMI,GAAW,KAAhE,QACQ,0BAAMf,UAAU,mBAAmBR,EAAME,OAE/C,4BACEQ,KAAK,SACLF,UAAU,kBACVW,QAAS,kBAAMnB,EAAMgC,WAAWhC,EAAMW,MAHxC,UAKS,0BAAMH,UAAU,mBAAmBR,EAAME,SAK1D,OAAO,wBAAIM,UAAU,QAAQc,EAAYI,EAAkBE,G,WCnEvDK,EAAa,CACjBC,IAAK,kBAAM,GACXC,OAAQ,SAAAC,GAAI,OAAKA,EAAKN,WACtBO,UAAW,SAAAD,GAAI,OAAIA,EAAKN,YAEpBQ,EAAeC,OAAOC,KAAKP,GAmFlBQ,MAjFf,SAAazC,GAAQ,IAAD,EAEQC,mBAASD,EAAM0C,OAFvB,mBAEXA,EAFW,KAEJC,EAFI,OAGU1C,mBAAS,OAHnB,mBAGX2C,EAHW,KAGHxB,EAHG,KAUlB,SAASW,EAAoBpB,GAC3B,IAAMkC,EAAeH,EAAMI,KAAI,SAAAV,GAC7B,OAAIzB,IAAOyB,EAAKzB,GACP,2BAAIyB,GAAX,IAAiBN,WAAYM,EAAKN,YAE7BM,KAETO,EAASE,GAGX,SAASb,EAAWrB,GAClB,IAAMoC,EAAiBL,EAAME,QAAO,SAAAR,GAAI,OAAIzB,IAAOyB,EAAKzB,MACxDgC,EAASI,GAGX,SAASpB,EAAShB,EAAIa,GACpB,IAAMwB,EAAiBN,EAAMI,KAAI,SAAAV,GAE/B,OAAIzB,IAAOyB,EAAKzB,GAEP,2BAAIyB,GAAX,IAAiBlC,KAAMsB,IAElBY,KAETO,EAASK,GAGX,IAAMC,EAAWP,EACdE,QAAO,SAAAR,GAAI,OAAIH,EAAWW,GAAQR,MAClCU,KAAI,SAAAV,GAAI,OACP,kBAACf,EAAD,CACEV,GAAIyB,EAAKzB,GACTT,KAAMkC,EAAKlC,KACX4B,UAAWM,EAAKN,UAChBoB,IAAKd,EAAKzB,GACVoB,oBAAqBA,EACrBC,WAAYA,EACZL,SAAUA,OAIZwB,EAAab,EAAaQ,KAAI,SAAA5C,GAAI,OACtC,kBAAC,EAAD,CACEgD,IAAKhD,EACLA,KAAMA,EACNgB,UAAWhB,IAAS0C,EACpBxB,UAAWA,OAIPgC,EAAgC,IAApBH,EAASI,OAAe,QAAU,OAC9CC,EAAW,UAAML,EAASI,OAAf,YAAyBD,EAAzB,cACjB,OACE,yBAAK5C,UAAU,uBACf,kBAAC,EAAD,CAAMD,QA3DR,SAAiBL,GACf,IAAMqD,EAAU,CAAE5C,GAAI,QAAU6C,cAAUtD,KAAMA,EAAM4B,WAAW,GACjEa,EAAS,GAAD,mBAAKD,GAAL,CAAYa,QA0DlB,yBAAK/C,UAAU,qCACZ2C,GAEH,wBAAIxC,GAAG,gBAAgB2C,GACvB,wBACEG,KAAK,OACLjD,UAAU,wCACVkD,kBAAgB,gBAEfT,KCtETU,IAASC,OACP,kBAAC,EAAD,CAAKlB,MAbK,CACV,CAAC/B,GAAI,SAAUT,KAAM,MAAO4B,WAAW,GACvC,CAACnB,GAAI,SAAUT,KAAM,QAAS4B,WAAW,GACzC,CAACnB,GAAI,SAAUT,KAAM,SAAU4B,WAAW,MAW1C+B,SAASC,eAAe,U","file":"static/js/main.1dc3f153.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState('');\r\n  \r\n  function handleChange(e) {\r\n    setName(e.target.value)\r\n  }  \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      \r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React, { useState } from \"react\";\r\n\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n\r\n}\r\nexport default FilterButton\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n          <input\r\n            id={props.id}\r\n            className=\"todo-text\"\r\n            type=\"text\"\r\n            value={newName}\r\n            onChange={handleChange}\r\n          />      \r\n        </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}>\r\n          Cancel\r\n            <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n           Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n  }","import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  \n  const taskList = tasks\n    .filter(task => FILTER_MAP[filter](task))\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\nconst filterList = FILTER_NAMES.map(name => (\n  <FilterButton\n    key={name}\n    name={name}\n    isPressed={name === filter}\n    setFilter={setFilter}\n  />\n));\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return (\n    <div className=\"todoapp stack-large\">\n    <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n        \n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nconst DATA= [\n  {id: \"todo-0\", name: \"Eat\", completed: true},\n  {id: \"todo-1\", name: \"Sleep\", completed: false},\n  {id: \"todo-2\", name: \"Repeat\", completed: false}\n]\n\n\n//Derek Ng A01055306\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById(\"root\")\n  );\n"],"sourceRoot":""}